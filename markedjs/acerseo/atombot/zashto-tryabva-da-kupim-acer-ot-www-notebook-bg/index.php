<?php
/**
 * @author      George Yanev (http://github.com/tunnckoCore)
 * 
 * @license     MIT License (http://opensource.org/licenses/MIT)
 * @copyright   2013, WAF Development
 */
//exit('We waiting fuckin` hosting company to turn on mbstring extension, cuz hole system was built around this.');
//header("Expires: Wed, 11 Jan 1984 05:00:00 GMT");
require '../../atmos/config.php';



$request = requestUri();
$results = count($request);


if ($request[0] == 'sitemaps.xml') {
    header("HTTP/1.1 301 Moved Permanently");
    header("Location: http://www.zashto-tryabva-da-kupim-acer-ot-www-notebook-bg.charlike.pw/");
    exit;
}

//for Related links
$xmlFileIndex = file_get_contents(APP_PUBLIC . APP_FEED);

$xmlIndex = simplexml_load_string($xmlFileIndex, 'SimpleXMLElement', LIBXML_NOCDATA);
$arrayIndex = json_decode(json_encode((array) $xmlIndex), true);
$templateData['dataIndex'] = $arrayIndex;


if ($request[0] == 'article' && $request[1] == 'publish' && $_POST) {
    $atomArticles = new AtomBotArticles($atomFeed, $atomEntries);
    $atomArticles->publish($_POST);
} else {
    
    if ($request[1] == 'article') {            
        $xmlFile = file_get_contents(APP_ATOMBOT . $request[0] . '.atom');

        $xml = simplexml_load_string($xmlFile, 'SimpleXMLElement', LIBXML_NOCDATA);
        $array = json_decode(json_encode((array) $xml), TRUE);
        $templateData['isArticle'] = 'yes';
        $templateData['data'] = $array;
        
        display('article.php', false, $templateData);
        exit;
    } elseif ($request[1] == 'atom') {
        header("Content-type: application/atom+xml; charset=utf-8");
        echo file_get_contents(APP_ATOMBOT . $request[0] . '.atom');
        exit;
    } elseif ($request[1] == 'publish') {
        $templateData['data']['create:title'] = $request[0];
        $templateData['data']['title'] = APP_NAME;
        $templateData['data']['entry']['title'] = 'Създаване на публикация';
        display('publish.php', false, $templateData);
        @unlink(APP_PUBLIC . 'index.html');
        exit;
    } elseif ($request[0] == 'atom') {
        header("Content-type: application/atom+xml; charset=utf-8");
        echo file_get_contents(APP_PUBLIC . APP_FEED);
        exit;
    } elseif ($request[1] == 'delete') {
        if ($request[4] == 'PrimaryKey' && $request[5] == 'z68wilderwein') {
            @unlink(APP_ATOMBOT . $request[0] . '.atom');
            //todo unlink from root feed
        }
        exit;
    } else {
        //echo "<pre>" . print_r($_SERVER, true) . "</pre>";
        //exit;
        $realCacheIndex = realpath(APP_PUBLIC . 'index.html');
        if ($realCacheIndex) {
            ob_start('ob_gzhandler');
            include $realCacheIndex;
            $parsedCache = ob_get_clean();
        } else {
        //if (!isset($_SESSION['X-Atmos/1.4'])) {
            $xmlFile = file_get_contents(APP_PUBLIC . APP_FEED);

            $xml = simplexml_load_string($xmlFile, 'SimpleXMLElement', LIBXML_NOCDATA);
            $array = json_decode(json_encode((array) $xml), true);

            $templateData['data'] = $array;
            $parsedCache = "<!-- Generated by X-Atmos/1.4 Cache [" . date("d F Y, H:i:s", time() + 7200) . "] -->\n";
            $parsedCache .= display('index.php', false, $templateData, true);
            //$_SESSION['X-Atmos/1.4'] = json_encode($parsed);
            //$saveCache = file_put_contents(APP_PUBLIC . 'index.html', $parsedCache);
            //if (!$saveCache) {
            //    exit('Cant create index cached file: ' . __LINE__);
            //}
        }
        header('Content-Type: text/html; charset=utf-8');
        header('Accept-Charset: utf-8');
        header('Accept-Encoding: gzip, deflate');
        header('Content-Transfer-Encoding: 8bit');
        //echo json_decode($_SESSION['X-Atmos/1.4'], true);
        echo $parsedCache;
        exit;
    }
}